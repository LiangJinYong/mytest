<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.inter.consumer">

	<!-- Version Check -->
	<select id="getVersionCheckByOSType"  parameterType="string" resultType="hashmap">
		/* getVersionCheckCount */
		SELECT current_version_code AS currentVersionCode, current_version_name AS currentVersionName, is_forced_update AS isForceUpdate, date_format(UPDATE_DTTM, '%Y-%m-%d %H:%i:%s') AS updateDttm FROM app_version WHERE os_type = #{osType} AND version_key = (SELECT MAX(version_key) FROM app_version WHERE os_type = #{osType})
	</select>
	
	<select id="getVersionCheckCountByVersionCode" parameterType="map" resultType="int">
		/* getVersionCheckCountByVersionCode */
		SELECT count(*) FROM app_version WHERE is_forced_update = 1 AND current_version_code &gt; #{currentVersionCodeParam} AND current_version_code &lt;= #{currentVersionCodeDB}
	</select>
	
	<!-- Publish Token -->
	<select id="queryAppUserCountByPhoneNumber" parameterType="string" resultType="int">
		/* queryAppUserCountByPhoneNumber */
		SELECT count(*) FROM app_user WHERE mobile_phone_number = #{mobilePhoneNumber}
	</select>
	
	<update id="updateAppUser" parameterType="map">
		/* updateAppUser */
		UPDATE app_user SET os_type = #{osType}, os_version = #{osVersion}, device = #{device}, token = #{token}, manufacture = #{manufacture}, regdate = #{time} WHERE mobile_phone_number = #{mobilePhoneNumber}
	</update>
	
	<insert id="insertAppUser" parameterType="map">
		/* insertAppUser */
		INSERT INTO app_user (user_key, mobile_phone_number, os_type, os_version, device, token, manufacture, regdate) VALUES (null, #{mobilePhoneNumber}, #{osType}, #{osVersion}, #{device}, #{token}, #{manufacture}, #{time})
	</insert>
	
	<!-- Register Question -->
	<select id="queryAppUserNoByToken" parameterType="string" resultType="int">
		/* queryAppUserNoByToken */
		SELECT app_user.user_key FROM app_user WHERE token = #{token}
	</select>
	
	<insert id="insertAppQuestion" parameterType="map">
		/* insertAppQuestion */
		INSERT INTO app_question (question_key, content, registration_time, token) VALUES (null, #{content}, #{time}, #{token})
	</insert>
	
	<!-- Get Question List -->
	<select id="queryAppUserCount" parameterType="string" resultType="int">
		/* queryAppUserCount */
		SELECT count(*) FROM app_user WHERE token = #{token}
	</select>
	
	<select id="queryQuestionAnswerList" parameterType="string" resultType="hashmap">
		/* queryQuestionAnswerList */
		SELECT q.question_key AS question_key, q.content AS content, date_format(q.registration_time, '%Y-%m-%d %H:%i:%s') AS registration_time, (SELECT user_key FROM app_user WHERE token = #{token}) AS user_key, a.answer_key, a.content AS a_content, date_format(a.registration_time, '%Y-%m-%d %H:%i:%s') AS a_registration_time, a.question_key AS a_question_key
		FROM app_question q LEFT JOIN app_answer a ON q.question_key = a.question_key
		WHERE token = #{token}
		ORDER BY question_key ASC, registration_time DESC
	</select>
	
	<!-- Send Certification Code -->
	<insert id="insertCertificationCode" parameterType="map">
		/* insertCertificationCode */
		INSERT INTO certification_code (method, certification_code, time) VALUES (#{mobilePhoneNumber}, #{certificationCode}, #{time}) ON DUPLICATE KEY UPDATE certification_code = #{certificationCode}, time = #{time}, method = #{mobilePhoneNumber}
	</insert>
	
	<!-- Confirm Certification Code -->
	<select id="queryCertificationCode" parameterType="string" resultType="string">
		/* queryCertificationCode */
		SELECT certification_code.certification_code FROM certification_code WHERE method = #{mobilePhoneNumber}
	</select>
	
	<!-- Physical Distribution List -->
	<select id="queryPhysicalDistributionInfo" parameterType="string" resultType="hashmap">
		/* queryPhysicalDistributionInfo */
		SELECT eu.name AS enterprise_user_name, e.name AS enterprise_name, e.type AS enterprise_type, pd.latitude, pd.longitude, pd.time, pd.type AS product_distribution_type, pd.province, pd.city, pd.district, pd.full_address
		FROM app_physical_distribution pd LEFT JOIN app_enterprise_user eu ON eu.enterprise_user_key = pd.enterprise_user_key
		LEFT JOIN app_enterprise e ON eu.enterprise_key = e.enterprise_key
		WHERE pd.SEQUENCE = #{sequence}
		ORDER BY pd.time DESC
	</select>
	
	<!-- ReWrite -->
	<select id="queryHomepageAddr" parameterType="string" resultType="string">
		/* queryHomepageAddr */
		SELECT lian_biz_info.HOMEPAGE_ADDR FROM re_seq
		LEFT JOIN lian_order_info ON re_seq.ORDERNUMBER = lian_order_info.ORDER_SEQ
		LEFT JOIN lian_user_info ON lian_order_info.USER_ID = lian_user_info.USER_ID
		LEFT JOIN lian_biz_info ON lian_user_info.BIZ_ID = lian_biz_info.BIZ_ID
		WHERE WATERMARK_KEY = #{watermarkKey}
	</select>
</mapper>